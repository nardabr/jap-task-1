// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jap_task.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220926105301_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("jap_task.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("jap_task.Models.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dev JAP is a 9-week program designed to prepare you for a full-time client engagement where you would work as a Junior Software Developer within existing Mistral teams. The program is designed to fit your pace and will be completely personalized according to your current capabilities. You can complete the program even sooner than 9 weeks if you work hard! Everything is up to you.",
                            Name = "JAP Dev"
                        },
                        new
                        {
                            Id = 2,
                            Description = "QA JAP is a 5-week program designed to prepare you for a full-time client engagement where you would work as a Junior Quality Assurance engineer within existing Mistral teams. The program is designed to fit your pace and will be completely personalized according to your current capabilities. If you work hard, you can complete the program even sooner than 5 weeks! Everything is up to you.",
                            Name = "JAP QA"
                        },
                        new
                        {
                            Id = 3,
                            Description = "DevOps JAP is a 13-week program designed to prepare you for a full-time client engagement where you would work as a Junior DevOps engineer within existing Mistral teams. The program is designed to fit your pace and will be completely personalized according to your current capabilities. You can complete the program even sooner than 13 weeks if you work hard! Everything is up to you.",
                            Name = "JAP DevOps"
                        });
                });

            modelBuilder.Entity("jap_task.Models.Selection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("SelectionStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.HasIndex("SelectionStatusId");

                    b.ToTable("Selections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndAt = new DateTime(2022, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "JAP Dev 09/2022",
                            ProgramId = 1,
                            SelectionStatusId = 1,
                            StartAt = new DateTime(2022, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndAt = new DateTime(2022, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "JAP QA 08/2022",
                            ProgramId = 2,
                            SelectionStatusId = 1,
                            StartAt = new DateTime(2022, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndAt = new DateTime(2022, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "JAP DevOps 09/2022",
                            ProgramId = 3,
                            SelectionStatusId = 1,
                            StartAt = new DateTime(2022, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("jap_task.Models.SelectionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SelectionStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Complete"
                        });
                });

            modelBuilder.Entity("jap_task.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SelectionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SelectionId");

                    b.HasIndex("StudentStatusId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ada",
                            LastName = "Lovelace",
                            SelectionId = 1,
                            StudentStatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Grace",
                            LastName = "Hopper",
                            SelectionId = 2,
                            StudentStatusId = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Joan",
                            LastName = "Clarke",
                            SelectionId = 3,
                            StudentStatusId = 4
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Harry",
                            LastName = "Potter",
                            SelectionId = 1,
                            StudentStatusId = 1
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Hermione",
                            LastName = "Granger",
                            SelectionId = 2,
                            StudentStatusId = 2
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Ron",
                            LastName = "Weasley",
                            SelectionId = 3,
                            StudentStatusId = 3
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Albus",
                            LastName = "Dumbledore",
                            SelectionId = 1,
                            StudentStatusId = 1
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Lord",
                            LastName = "Voldemort",
                            SelectionId = 2,
                            StudentStatusId = 3
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Draco",
                            LastName = "Malfoy",
                            SelectionId = 3,
                            StudentStatusId = 3
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Sirius",
                            LastName = "Black",
                            SelectionId = 1,
                            StudentStatusId = 4
                        });
                });

            modelBuilder.Entity("jap_task.Models.StudentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "In Program"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Success"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Failed"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Extended"
                        });
                });

            modelBuilder.Entity("jap_task.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.com",
                            PasswordHash = new byte[] { 198, 227, 92, 255, 154, 50, 54, 235, 174, 73, 241, 121, 249, 144, 234, 104, 104, 181, 221, 237, 158, 129, 241, 190, 78, 161, 46, 103, 184, 55, 56, 149, 222, 24, 246, 181, 47, 5, 16, 17, 3, 166, 47, 120, 63, 167, 48, 50, 233, 216, 148, 12, 44, 235, 246, 98, 165, 35, 193, 207, 144, 136, 222, 221 },
                            PasswordSalt = new byte[] { 21, 31, 56, 65, 83, 36, 148, 92, 165, 161, 163, 14, 177, 54, 92, 253, 246, 78, 70, 194, 0, 85, 49, 180, 92, 157, 253, 114, 63, 149, 35, 58, 249, 155, 41, 95, 83, 114, 155, 208, 148, 190, 232, 21, 223, 102, 77, 23, 94, 160, 193, 184, 104, 99, 136, 169, 45, 15, 170, 171, 198, 19, 236, 253, 22, 46, 40, 75, 255, 192, 68, 242, 204, 125, 40, 6, 8, 92, 121, 53, 140, 56, 93, 209, 217, 108, 209, 166, 58, 128, 54, 99, 168, 135, 43, 235, 246, 96, 208, 109, 106, 109, 226, 251, 248, 238, 79, 46, 147, 139, 75, 253, 47, 198, 244, 19, 26, 220, 206, 199, 38, 49, 253, 58, 71, 143, 48, 126 }
                        });
                });

            modelBuilder.Entity("jap_task.Models.Selection", b =>
                {
                    b.HasOne("jap_task.Models.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jap_task.Models.SelectionStatus", "Status")
                        .WithMany()
                        .HasForeignKey("SelectionStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("jap_task.Models.Student", b =>
                {
                    b.HasOne("jap_task.Models.Selection", "Selection")
                        .WithMany()
                        .HasForeignKey("SelectionId");

                    b.HasOne("jap_task.Models.StudentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StudentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Selection");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
