// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jap_task.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("jap_task.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("jap_task.Models.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dev JAP is a 9-week program designed to prepare you for a full-time client engagement where you would work as a Junior Software Developer within existing Mistral teams. The program is designed to fit your pace and will be completely personalized according to your current capabilities. You can complete the program even sooner than 9 weeks if you work hard! Everything is up to you.",
                            Name = "JAP Dev"
                        },
                        new
                        {
                            Id = 2,
                            Description = "QA JAP is a 5-week program designed to prepare you for a full-time client engagement where you would work as a Junior Quality Assurance engineer within existing Mistral teams. The program is designed to fit your pace and will be completely personalized according to your current capabilities. If you work hard, you can complete the program even sooner than 5 weeks! Everything is up to you.",
                            Name = "JAP QA"
                        },
                        new
                        {
                            Id = 3,
                            Description = "DevOps JAP is a 13-week program designed to prepare you for a full-time client engagement where you would work as a Junior DevOps engineer within existing Mistral teams. The program is designed to fit your pace and will be completely personalized according to your current capabilities. You can complete the program even sooner than 13 weeks if you work hard! Everything is up to you.",
                            Name = "JAP DevOps"
                        });
                });

            modelBuilder.Entity("jap_task.Models.Selection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("SelectionStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.HasIndex("SelectionStatusId");

                    b.ToTable("Selections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndAt = new DateTime(2022, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "JAP Dev 09/2022",
                            ProgramId = 1,
                            SelectionStatusId = 1,
                            StartAt = new DateTime(2022, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndAt = new DateTime(2022, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "JAP QA 08/2022",
                            ProgramId = 2,
                            SelectionStatusId = 1,
                            StartAt = new DateTime(2022, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndAt = new DateTime(2022, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "JAP DevOps 09/2022",
                            ProgramId = 3,
                            SelectionStatusId = 1,
                            StartAt = new DateTime(2022, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("jap_task.Models.SelectionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SelectionStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Complete"
                        });
                });

            modelBuilder.Entity("jap_task.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SelectionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SelectionId");

                    b.HasIndex("StudentStatusId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ada",
                            LastName = "Lovelace",
                            SelectionId = 1,
                            StudentStatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Grace",
                            LastName = "Hopper",
                            SelectionId = 2,
                            StudentStatusId = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Joan",
                            LastName = "Clarke",
                            SelectionId = 3,
                            StudentStatusId = 4
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Harry",
                            LastName = "Potter",
                            SelectionId = 1,
                            StudentStatusId = 1
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Hermione",
                            LastName = "Granger",
                            SelectionId = 2,
                            StudentStatusId = 2
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Ron",
                            LastName = "Weasley",
                            SelectionId = 3,
                            StudentStatusId = 3
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Albus",
                            LastName = "Dumbledore",
                            SelectionId = 1,
                            StudentStatusId = 1
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Lord",
                            LastName = "Voldemort",
                            SelectionId = 2,
                            StudentStatusId = 3
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Draco",
                            LastName = "Malfoy",
                            SelectionId = 3,
                            StudentStatusId = 3
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Sirius",
                            LastName = "Black",
                            SelectionId = 1,
                            StudentStatusId = 4
                        });
                });

            modelBuilder.Entity("jap_task.Models.StudentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "In Program"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Success"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Failed"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Extended"
                        });
                });

            modelBuilder.Entity("jap_task.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.com",
                            PasswordHash = new byte[] { 46, 127, 182, 40, 42, 159, 148, 32, 97, 72, 35, 203, 38, 105, 43, 75, 217, 50, 151, 15, 222, 23, 148, 136, 15, 185, 83, 184, 170, 129, 82, 134, 65, 175, 161, 68, 54, 4, 134, 165, 223, 32, 147, 196, 119, 171, 114, 173, 209, 91, 169, 136, 239, 88, 233, 163, 87, 119, 20, 143, 221, 236, 188, 227 },
                            PasswordSalt = new byte[] { 80, 42, 255, 184, 209, 195, 210, 20, 15, 26, 68, 240, 193, 108, 91, 180, 106, 43, 11, 10, 18, 226, 187, 191, 255, 190, 128, 92, 73, 215, 108, 44, 144, 61, 108, 173, 212, 65, 2, 181, 167, 42, 5, 129, 2, 5, 239, 235, 49, 103, 170, 35, 4, 64, 231, 251, 136, 159, 153, 115, 56, 63, 104, 188, 95, 38, 92, 25, 52, 243, 149, 26, 133, 181, 93, 249, 136, 23, 214, 130, 166, 181, 163, 225, 215, 76, 163, 71, 2, 224, 17, 116, 139, 48, 165, 86, 151, 17, 177, 29, 116, 124, 33, 87, 112, 177, 166, 236, 2, 253, 113, 135, 202, 209, 3, 56, 127, 12, 199, 140, 239, 71, 196, 128, 182, 126, 190, 10 },
                            Status = 1
                        });
                });

            modelBuilder.Entity("jap_task.Models.Selection", b =>
                {
                    b.HasOne("jap_task.Models.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jap_task.Models.SelectionStatus", "Status")
                        .WithMany()
                        .HasForeignKey("SelectionStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("jap_task.Models.Student", b =>
                {
                    b.HasOne("jap_task.Models.Selection", "Selection")
                        .WithMany()
                        .HasForeignKey("SelectionId");

                    b.HasOne("jap_task.Models.StudentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StudentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Selection");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
